#!/usr/bin/awk -f

# XXX refactor?

function hooks() {
	for (i in HOOKS_ARR)
		print("//!HOOK " HOOKS_ARR[i])
}

BEGIN {
	if (!OUT_TEX)
		OUT_TEX = "RF"

	if (HOOKS)
		split(HOOKS, HOOKS_ARR, ",")
	else
		split("LUMA,CHROMA,RGB", HOOKS_ARR, ",")

	inject_prefix = "_INJ_"
}

# XXX handle TEXTURE blocks

{ gsub("[[:space:](;]", "& ") }

$1 == "//!HOOK" {
	if (!shader_hook) {
		shader_hook = 1 # mark start of HOOK block
		hooks() # inject our hooks
	}
	next
}

$1 == "//!WHEN" { next }

$1 == "//!SAVE" {
	shader_save = 1
	intern_texs = intern_texs ? (intern_texs ":" $2) : $2
	print($1, inject_prefix $2)
	next
}

$0 !~ /^\/\/!/ {
	if (shader_hook && !shader_save) # end of final HOOK block
		print("//!SAVE", OUT_TEX)
	shader_hook = shader_save = 0
}

# prefix all occurrences of internal texture names
{
	split(intern_texs, intern_texs_arr, ":")
	tex_suffix = shader_hook ? "" : "_" # relaxed search inside HOOK blocks
	for (i = 1; i <= NF; i++) {
		for (t in intern_texs_arr) {
			if (index($i, intern_texs_arr[t] tex_suffix) == 1) {
				$i = inject_prefix $i
				break
			}
		}
	}
}

{ gsub(/  /, " "); gsub(/\( /, "("); }

{ print($0) }


