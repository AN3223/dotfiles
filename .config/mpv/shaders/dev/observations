#!/bin/sh -e
# vi: foldmethod=marker
### Here are some observations about the data gathered from shader_test. 
### Think of this kinda like a jupyter notebook. The format goes:
#
#{{{ Section start
### Command
#code
# OUTPUT:
# the code's output
#}}} Section end

### XXX testing is new and incomplete, take everything with a grain of salt

### XXX test on different noise levels
### XXX test LQ
### XXX test temporal (including ME)

#{{{ Optimal non-local means 2x upscale (luma)
#
#fn='max=S:10.218485798609118:1.01_cfgopts=CFG_SIZE="2*":SF=2:PS=0:R=7:RS=8:SK="sphinx":SS=1.369:SW="EPSILON":WD=0:RF_LUMA="2*":RI=0,7:RF=0_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# S=13.772975:CFG_SIZE=2*:SF=2:PS=0:R=7:RS=8:SK=sphinx:SS=1.369000:SW=EPSILON:WD=0:RF_LUMA=2*:RI=0:RF=0 0.935378
# S=13.266202730959009:CFG_SIZE=2*:SF=2:PS=0:R=7:RS=8:SK=sphinx:SS=1.369000:SW=EPSILON:WD=0:RF_LUMA=2*:RI=7:RF=0 0.9354356
#
#}}}

#{{{ Optimal non-local means 2x denoising upscale (luma, P=3:R=5:PS=3:RS=3)
#
### Surprisingly, SF=2 only performs better on gaussian.
#
#fn='max=S:1,SS:0.25,WDT:0.5_cfgopts=CFG_SIZE="2*":SF=1,2:SK="gaussian","lanczos":EP=0_corruption=VF=scale=540:540,NOISE=10:10_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=20.37203375949:SS=0.67215:WDT=1.344299:CFG_SIZE=2*:SF=2:SK=gaussian:EP=0 0.85227246
# S=20.37203375949:SS=0.373047:WDT=1.4146805:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.85229492
# S=20.37203375949:SS=0.364258:WDT=1.4146805:CFG_SIZE=2*:SF=2:SK=lanczos:EP=0 0.85244034
# S=22.7373675443:SS=0.320313:WDT=1.344299:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.85245692
# S=22.7373675443:SS=0.67215:WDT=1.344299:CFG_SIZE=2*:SF=1:SK=gaussian:EP=0 0.8525713
# S=22.7373675443:SS=0.364258:WDT=1.4146805:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.85263062
# S=22.7373675443:SS=0.812912:WDT=1.4146805:CFG_SIZE=2*:SF=1:SK=gaussian:EP=0 0.85271156
# S=22.7373675443:SS=0.812912:WDT=1.4146805:CFG_SIZE=2*:SF=2:SK=gaussian:EP=0 0.85284334
# S=22.7373675443:SS=0.355469:WDT=1.4146805:CFG_SIZE=2*:SF=2:SK=lanczos:EP=0 0.85296646
# S=22.7373675443:SS=0.355469:WDT=1.4146805:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.85322484
#
### A very low SW performs even better
#
#fn='max=S:10:1.25:1e-4,^SS:0.54:1.1:1e-5,^WDT:0.68:1.1:1e-5,SW:0.18:1.1:1e-5_cfgopts=CFG_SIZE="2*":SF=1,2:SK="lanczos":EP=0_corruption=VF=scale=540:540,NOISE=10:3_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=15.625:SS=0.5632970300397712:WDT=0.60701415:SW=0.14876:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.85537467
# S=8.2:SS=0.50608543:WDT=0.8228:SW=0.18:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.8553919333
# S=8.2:SS=0.5078324307005203:WDT=0.8178941287043633:SW=0.12518282:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.8554
# S=10:SS=0.5008509223319869:WDT=0.8443985:SW=0.2178:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.855414333
# S=8.2:SS=0.5209189437274977:WDT=0.764663415782488398:SW=0.12518282:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.855420933
# S=10:SS=0.5294273649357014:WDT=0.73448713:SW=0.2178:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.855477067
# S=10:SS=0.5394490278912839:WDT=0.69785:SW=0.18:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.8556734
# S=12.8125:SS=0.5419648730433011:WDT=0.693689131886655221:SW=0.12518282:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.855673867
# S=10:SS=0.5370713100734172:WDT=0.7114327028606135153:SW=0.12518282:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.855740667
# S=12.8125:SS=0.5547703803256947:WDT=0.63888239592:SW=0.14876:CFG_SIZE=2*:SF=1:SK=lanczos:EP=0 0.855740933
#
### XXX test w/o RF_LUMA
### XXX test w/ sharpening
#}}}

#{{{ Optimal non-local means (luma, P=3:R=5:PS=3:RS=3)
#
#fn='max=S:2.190854454502994284:1.01:1e-5,SW:0.5018054406951963:1.01:1e-5,SS:0.46330693798936723:1.01:1e-5,WDT:0.4205969368932865:1.01:1e-5_cfgopts=RF_LUMA="..\guided.glsl","..\LQ\nlmeans.glsl"_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=3.229735206972112:SW=0.2741950888937955:SS=0.5121845143109105:WDT=0.4205969368932865:RF_LUMA=../LQ/nlmeans.glsl 0.9576492
# S=3.229735206972112:SW=0.37464409567738777:SS=0.49180965058896126:WDT=0.4205969368932865:RF_LUMA=../LQ/nlmeans.glsl 0.95764966
# S=3.229735206972112:SW=0.2707760142203208:SS=0.5138743818807868:WDT=0.424823936109064:RF_LUMA=../LQ/nlmeans.glsl 0.95765064
# S=3.229735206972112:SW=0.2741950888937955:SS=0.5121845143109105:WDT=0.42905093532484156:RF_LUMA=../LQ/nlmeans.glsl 0.95765118
# S=3.229735206972112:SW=0.4062839248233092:SS=0.49346526957563425:WDT=0.424823936109064:RF_LUMA=../LQ/nlmeans.glsl 0.95765194
# S=3.229735206972112:SW=0.4062839248233092:SS=0.49180965058896126:WDT=0.42905093532484156:RF_LUMA=../LQ/nlmeans.glsl 0.95765282
# S=3.229735206972112:SW=0.37464409567738777:SS=0.49346526957563425:WDT=0.424823936109064:RF_LUMA=../LQ/nlmeans.glsl 0.95765424
# S=3.229735206972112:SW=0.37464409567738777:SS=0.49180965058896126:WDT=0.42905093532484156:RF_LUMA=../LQ/nlmeans.glsl 0.95765436
# S=3.229735206972112:SW=0.32441959228559164:SS=0.5121845143109105:WDT=0.4205969368932865:RF_LUMA=../LQ/nlmeans.glsl 0.95765872
# S=3.229735206972112:SW=0.32441959228559164:SS=0.5121845143109105:WDT=0.42905093532484156:RF_LUMA=../LQ/nlmeans.glsl 0.95765928
#
#}}}

#{{{ Optimal non-local means (luma, P=3:R=5:PS=0:RS=8)
#
### Surprisingly, this is actually slightly worse than PS=3:RS=3
#
#fn='max=S:2:1.1,^SS:0.39:1.1,WDT:0.5:1.1_cfgopts=PS=0:RS=8_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=1.913223:SS=0.39343648775145753522:WDT=0.1693084616215022:PS=0:RS=8 0.95554904
# S=2:SS=0.41306158571530696097:WDT=0.2445941305584265:PS=0:RS=8 0.95554916
# S=1.913223:SS=0.391159542683828596:WDT=0.2069512960899644:PS=0:RS=8 0.95555066
# S=1.956612:SS=0.403249036733382248095:WDT=0.1693084616215022:PS=0:RS=8 0.95555076
# S=1.956612:SS=0.4081553112243446:WDT=0.1693084616215022:PS=0:RS=8 0.9555528
# S=1.956612:SS=0.41306158571530696097:WDT=0.1693084616215022:PS=0:RS=8 0.95555312
# S=1.956612:SS=0.4041005389177641:WDT=0.2445941305584265:PS=0:RS=8 0.95555382
# S=1.956612:SS=0.410329251634152234:WDT=0.2069512960899644:PS=0:RS=8 0.95555424
# S=1.956612:SS=0.3951394921202213:WDT=0.2445941305584265:PS=0:RS=8 0.9555553
# S=1.956612:SS=0.399833619131939:WDT=0.2069512960899644:PS=0:RS=8 0.95555582
#
### NLM serves as a better guide compared to guided filter
#
#fn='max=S:2:1.1,^SS:0.39:1.1,WDT:0.5:1.1_cfgopts=PS=0:RS=8:RF_LUMA="..\nlmeans.glsl"_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=2.07875:SS=0.4077364517482260126:WDT=0.08015995190181202:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.95601398
# S=2.105:SS=0.4114515710709733:WDT=0.10591278952742601:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.956016
# S=2.105:SS=0.41633872208482536:WDT=0.10591278952742601:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.95601808
# S=2.105:SS=0.42122587309867743:WDT=0.10591278952742601:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.95601818
# S=2.105:SS=0.4059791559767869:WDT=0.13166562715304:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.9560187
# S=2.13125:SS=0.4262298977238475:WDT=0.13166562715304:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.95601938
# S=2.07875:SS=0.3938113792916354:WDT=0.1693084616215022:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.9560204
# S=2.105:SS=0.42122587309867743:WDT=0.1693084616215022:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.9560225
# S=2.105:SS=0.40294954389398274:WDT=0.1693084616215022:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.95602378
# S=2.105:SS=0.4120877084963301:WDT=0.1693084616215022:PS=0:RS=8:RF_LUMA=../nlmeans.glsl 0.95602906
#
#}}}

#{{{ Optimal non-local means (luma, anime, P=3:R=5:PS=3:RS=3)
#
### Same as above
#
#fn1="NLM:anime:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:WDT=0.625,0.7:SS=0.0,0.125,0.25:SW=1.0,0.9:EP=0.stats.bz2"
#fn2="NLM:anime:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:WDT=0.4,0.5,0.6:SS=0.0,0.125,0.25:SW=1.0,0.9:RF_LUMA=\".._guided.glsl\",\".._guided_s_fast.glsl\":EP=0.stats.bz2"
#bzcat "stats/$fn1" "stats/$fn2" | sort -k 2 -n | tail
#
# OUTPUT:
# S=2:WDT=0.600000:SS=0.125000:SW=1.000000:RF_LUMA=../guided.glsl:EP=0 0.9186018636
# S=2.360000:WDT=0.700000:SS=0.250000:SW=1.000000:EP=0 0.918625227
# S=2.180000:WDT=0.625000:SS=0.250000:SW=0.900000:EP=0 0.9187248182
# S=1.880000:WDT=0.400000:SS=0.250000:SW=1.000000:RF_LUMA=../guided.glsl:EP=0 0.9187345
# S=1.820000:WDT=0.400000:SS=0.250000:SW=0.900000:RF_LUMA=../guided.glsl:EP=0 0.9187353636
# S=2.060000:WDT=0.600000:SS=0.250000:SW=0.900000:RF_LUMA=../guided.glsl:EP=0 0.918748636
# S=2.180000:WDT=0.625000:SS=0.250000:SW=1.000000:EP=0 0.9187519091
# S=2.180000:WDT=0.600000:SS=0.250000:SW=1.000000:RF_LUMA=../guided.glsl:EP=0 0.918764545
# S=2:WDT=0.500000:SS=0.250000:SW=0.900000:RF_LUMA=../guided.glsl:EP=0 0.918771
# S=2:WDT=0.500000:SS=0.250000:SW=1.000000:RF_LUMA=../guided.glsl:EP=0 0.91877964
#}}}

#{{{ Optimal non-local means (luma, P=4:PS=6:RI=0:RFI=0)
#
#fn1="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:3:2:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=0.25,0.375...0.75:SW=1.0,0.875:SS=1_16,1_8...0.375:EP=0.stats.bz2"
#fn2="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:3:2:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=0.75,0.875...1.125:SW=1.0,0.875:SS=0.125,0.25,0.375:EP=0.stats.bz2"
#fn3="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.125:1e-6:Inf:P=4:PS=6:RI=0:RFI=0:WDT=0.75:SW=1.0,0.875:SS=0.25:EP=0.stats.bz2"
#bzcat "stats/$fn1" "stats/$fn2" "stats/$fn3" | sort -k 2 -n | uniq | tail
#
# OUTPUT:
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.625000:SW=0.875000:SS=0.375000:EP=0 0.9037757636
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.625000:SW=0.875000:SS=0.312500:EP=0 0.90378036
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.187500:EP=0 0.9037872909
# S=2.375000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.312500:EP=0 0.9037937818
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:SS=0.187500:EP=0 0.903801309
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:SS=0.250000:EP=0 0.9038554727
# S=2.500000:P=4:PS=6:RI=0:RFI=0:WDT=0.875000:SW=0.875000:SS=0.125000:EP=0 0.90385909
# S=2.320313:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:SS=0.250000:EP=0 0.9038785818
# S=2.375000:P=4:PS=6:RI=0:RFI=0:WDT=0.875000:SW=1.000000:SS=0.125000:EP=0 0.9038870727
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:EP=0 0.9038942727
#
### Using NLM as a guide for NLM is slightly better
### XXX move this test into miscellaneous
#
#fn="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=0.75:SW=0.875:RF='.._nlmeans.glsl':EP=0.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail -n 1
#
# OUTPUT:
# S=2.760417:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:RF=../nlmeans.glsl:EP=0 0.904014364
#
### PSS behaves weirdly, the high scores here aren't remotely close to 
### their neighbors w/ very similar parameters
#
#fn1="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=0.25,0.5,0.625,0.75,0.875:SW=1.0,0.875:RF='.._nlmeans.glsl':PST=1:PSS=1_16,1_8...0.25:SS=0.125,0.25,0.375:EP=0.stats.bz2"
#fn2="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=1.0,1.125:SW=1.0,0.875:RF='.._nlmeans.glsl':PST=1:PSS=1_16,1_8...0.25:SS=0.125,0.25,0.375:EP=0.stats.bz2"
#fn3="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=14_16,1.0,18_16:SW=16_16,15_16...13_16:RF='.._nlmeans.glsl':PST=1:PSS=3_16,4_16...6_16:SS=1_16,2_16,3_16:EP=0.stats.bz2"
#bzcat "stats/$fn1" "stats/$fn2" "stats/$fn3" | sort -k 2 -n | tail
#
# OUTPUT:
# S=2.994792:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.125000:SS=0.250000:EP=0 0.9039193455
# S=3.125000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:RF=../nlmeans.glsl:PST=1:PSS=0.125000:SS=0.250000:EP=0 0.9039232364
# S=3.125000:P=4:PS=6:RI=0:RFI=0:WDT=0.625000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.125000:SS=0.375000:EP=0 0.9039532909
# S=2.929688:P=4:PS=6:RI=0:RFI=0:WDT=0.625000:SW=1.000000:RF=../nlmeans.glsl:PST=1:PSS=0.062500:SS=0.375000:EP=0 0.9039552182
# S=2.734375:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.062500:SS=0.250000:EP=0 0.9039937818
# S=2.799479:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:RF=../nlmeans.glsl:PST=1:PSS=0.062500:SS=0.250000:EP=0 0.9039956909
# S=2.929688:P=4:PS=6:RI=0:RFI=0:WDT=0.625000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.062500:SS=0.375000:EP=0 0.9040248182
# S=2.500000:P=4:PS=6:RI=0:RFI=0:WDT=1.125000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.125000:SS=0.125000:EP=0 0.9054709444
# S=3.417969:P=4:PS=6:RI=0:RFI=0:WDT=0.875000:SW=1.000000:RF=../nlmeans.glsl:PST=1:PSS=0.187500:SS=0.125000:EP=0 0.9291419143
# S=5.340576:P=4:PS=6:RI=0:RFI=0:WDT=1.000000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.250000:SS=0.125000:EP=0 0.956068
#
### Can't reproduce the best result, that's not good
#
#fn="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:10:S=5.340576,5.34:P=4:PS=6:RI=0:RFI=0:WDT=1.0:SW=0.875:RF='.._nlmeans.glsl':PST=1:PSS=0.25:SS=0.125:EP=0.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8194764909
# S=5.340000:P=4:PS=6:RI=0:RFI=0:WDT=1.000000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.250000:SS=0.125000:EP=0 0.8965791273
# S=5.340576:P=4:PS=6:RI=0:RFI=0:WDT=1.000000:SW=0.875000:RF=../nlmeans.glsl:PST=1:PSS=0.250000:SS=0.125000:EP=0 0.8965792909
#}}}

#{{{ PS=6:NG=0 rotations/reflections appear to be broken/bad
#
#fn="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:P=4:PS=6:RI=0,3:RFI=0,2:WDT=0.75:SW=0.875:SS=0.25:NG=0,1:EP=0.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8194764909
# S=1.600000:P=4:PS=6:RI=3:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.8980376
# S=1.800000:P=4:PS=6:RI=3:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.8992544727
# S=1.800000:P=4:PS=6:RI=3:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.9009878545
# S=1.706667:P=4:PS=6:RI=3:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.9015264727
# S=2.116667:P=4:PS=6:RI=0:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.9031447818
# S=2.150000:P=4:PS=6:RI=0:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.903418764
# S=2.317708:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.903894
# S=2.317708:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.903894
#}}}

#{{{ Optimal non-local means (chroma, P=3:R=5:PS=3:RS=3)
#
### (I specified the optimal guided parameters, but they happen to be 
### the defaults, so they can be ignored)
#
#fn="NLM:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:2:1e-6:10:GUIDED_MEANI=1.5:GUIDED_I=1.0:GUIDED_PREI=1.25:WDT=0.0,0.125...1.25:SW=1.0,0.875...0.5:RF='.._guided.glsl'.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
# OUTPUT:
# S=15.000000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.875000:SW=0.500000:RF=../guided.glsl 0.93798715455
# S=4.062500:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.625000:SW=0.625000:RF=../guided.glsl 0.93798997273
# S=5:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.750000:SW=0.625000:RF=../guided.glsl 0.93805900909
# S=3.750000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.250000:SW=0.500000:RF=../guided.glsl 0.9381306545
# S=3.437500:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.125000:SW=0.500000:RF=../guided.glsl 0.9381328727
# S=3.437500:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.000000:SW=0.500000:RF=../guided.glsl 0.9381378636
# S=3.750000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.375000:SW=0.500000:RF=../guided.glsl 0.93813826364
# S=3.750000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.500000:SW=0.500000:RF=../guided.glsl 0.93816037273
# S=3.854167:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.625000:SW=0.500000:RF=../guided.glsl 0.93819815455
# S=5:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.750000:SW=0.500000:RF=../guided.glsl 0.938249636
#
### Rotation doesn't seem to help
#
#fn="NLM:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:1.25:1e-6:10:RI=0,3:RFI=0,2.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.71131393636
# S=5:RI=3:RFI=0 0.9381547091
# S=5:RI=3:RFI=2 0.9381651364
# S=5:RI=0:RFI=2 0.9381892909
# S=4.750000:RI=0:RFI=0 0.93825457273
#}}}

#{{{ Optimal guided filter (luma)
#
### Surprisingly, MEANI < 1 is actually better in some cases, although 
### it's slower, so it's not really practical
#
### MEANI really likes multiples of 0.25, (the maximizer gets stuck in a 
### loop if it starts searching slightly higher/lower than 1.5)
#
#fn="guided:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=MEANI:1.5:2:3e-3:10:E=0.001,0.0025,0.005,0.0075,0.01:PREI=1,1.125...1.5:I=1,2,3,4.stats.bz2"
#bzcat "stats/$fn" | grep BASELINE
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.819476491
#
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=1.5:E=0.001:PREI=1:I=1 0.891042782
# MEANI=0.75:E=0.0025:PREI=1.5:I=1 0.891849873
# MEANI=1.5:E=0.0025:PREI=1.375:I=1 0.892759109
# MEANI=1.5:E=0.0025:PREI=1.25:I=1 0.893501418
# MEANI=1.5:E=0.0025:PREI=1.125:I=1 0.894048255
# MEANI=1.5:E=0.0025:PREI=1:I=1 0.89437764
# MEANI=1.5:E=0.001:PREI=1.5:I=1 0.895546582
# MEANI=1.5:E=0.001:PREI=1.125:I=1 0.89563142
# MEANI=1.5:E=0.001:PREI=1.375:I=1 0.8957968
# MEANI=1.5:E=0.001:PREI=1.25:I=1 0.895904055
#
#bzcat "stats/$fn" | grep -F :I=2 | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=0.375:E=0.0025:PREI=1.5:I=2 0.870801945
# MEANI=0.375:E=0.0025:PREI=1.375:I=2 0.87102095
# MEANI=0.375:E=0.0025:PREI=1.25:I=2 0.87133773
# MEANI=0.5625:E=0.0025:PREI=1.125:I=2 0.871566055
# MEANI=0.75:E=0.0025:PREI=1:I=2 0.87180127
# MEANI=0.75:E=0.001:PREI=1.5:I=2 0.888474818
# MEANI=0.75:E=0.001:PREI=1.375:I=2 0.8887018
# MEANI=0.75:E=0.001:PREI=1:I=2 0.889102927
# MEANI=0.75:E=0.001:PREI=1.25:I=2 0.88914895
# MEANI=0.75:E=0.001:PREI=1.125:I=2 0.889274491
#
#bzcat "stats/$fn" | grep -F :I=3 | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=1.5:E=0.0025:PREI=1.5:I=3 0.840087891
# MEANI=1.5:E=0.0025:PREI=1.375:I=3 0.8514126
# MEANI=1.5:E=0.0025:PREI=1.25:I=3 0.853154218
# MEANI=1.5:E=0.0025:PREI=1.125:I=3 0.855044255
# MEANI=1.5:E=0.0025:PREI=1:I=3 0.862426836
# MEANI=1.5:E=0.001:PREI=1.5:I=3 0.8639341
# MEANI=1.5:E=0.001:PREI=1.375:I=3 0.872605891
# MEANI=1.5:E=0.001:PREI=1.25:I=3 0.8738773
# MEANI=1.5:E=0.001:PREI=1.125:I=3 0.875325582
# MEANI=1.5:E=0.001:PREI=1:I=3 0.878092582
#
#bzcat "stats/$fn" | grep -F :I=4 | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=1.5:E=0.0025:PREI=1.5:I=4 0.8435852
# MEANI=1.5:E=0.0025:PREI=1.375:I=4 0.844330055
# MEANI=1.5:E=0.0025:PREI=1.25:I=4 0.844942291
# MEANI=1.5:E=0.0025:PREI=1.125:I=4 0.845373491
# MEANI=1.5:E=0.0025:PREI=1:I=4 0.84602633
# MEANI=1.5:E=0.001:PREI=1.5:I=4 0.870876564
# MEANI=1.5:E=0.001:PREI=1.375:I=4 0.871276436
# MEANI=1.5:E=0.001:PREI=1.25:I=4 0.8717232
# MEANI=1.5:E=0.001:PREI=1.125:I=4 0.87195318
# MEANI=1.5:E=0.001:PREI=1:I=4 0.872120982
#
### A small amount of PREI subsampling does indeed improve quality
#
#bzcat "stats/$fn" | sort -k 2 -n | tail -n 3
#
# OUTPUT:
# MEANI=1.5:E=0.001:PREI=1.125:I=1 0.89563142
# MEANI=1.5:E=0.001:PREI=1.375:I=1 0.8957968
# MEANI=1.5:E=0.001:PREI=1.25:I=1 0.895904055
#
#bzcat "stats/$fn" | grep -F :PREI=1: | sort -k 2 -n | tail -n 3
#
# OUTPUT:
# MEANI=0.75:E=0.005:PREI=1:I=1 0.890238818
# MEANI=1.5:E=0.001:PREI=1:I=1 0.891042782
# MEANI=1.5:E=0.0025:PREI=1:I=1 0.89437764
#}}}

#{{{ Upscaling
### XXX retest
#
### shader_test works for testing upscalers
#
#fn='FSRCNNX_x2_8-0-4-1:images:LUMA:SCALE=540:540:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# BASELINE=SCALE=540:540 0.927599
# NO_CFGOPTS 0.9498638
#
### Bicubic is scale's default
#
#fn='FSRCNNX_x2_8-0-4-1:images:LUMA:SCALE=540:540:flags=bicubic:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# BASELINE=SCALE=540:540:flags=bicubic 0.927599
# NO_CFGOPTS 0.9498638
#
### Lanczos is better
#
#fn='FSRCNNX_x2_8-0-4-1:images:LUMA:SCALE=540:540:flags=lanczos:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# BASELINE=SCALE=540:540:flags=lanczos 0.9326444
# NO_CFGOPTS 0.9505084
#
### nlmeans_2x is worse than baseline lol
#
#fn='NLM_2x:images:LUMA:SCALE=540:540:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9022264
# BASELINE=SCALE=540:540 0.927599
#}}}

#{{{ Reverse chroma subsampling
### XXX retest
#
### Nothing seems to perform very well
#
#fn='KrigBilateral:images:CHROMA:FORMAT=yuv420p:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9862585
# BASELINE=FORMAT=yuv420p 0.9867304
#
#fn='NLM_lgc:images:CHROMA:FORMAT=yuv420p:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9861952
# BASELINE=FORMAT=yuv420p 0.9867304
#
### Guided LGC scored much lower
#
#fn='guided_lgc:images:CHROMA:FORMAT=yuv420p:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9731073
# BASELINE=FORMAT=yuv420p 0.9867304
#}}}

#{{{ Optimal NLM LGC (chroma, necessarily)
#
#fn="NLM:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:10:3:1e-6:10:RF='SHARE_LUMA':D1W=1:RI=3:RFI=2:WDT=0.0,0.25...1.5:SW=1.0,0.875,0.75:R=3,5,7.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=8.888889:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.750000:R=7 0.9465736909
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=1.000000:R=7 0.94704555455
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=1.000000:R=7 0.94706957273
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=1.000000:R=7 0.9471524091
# S=7.500000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.875000:R=7 0.947231364
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.875000:R=7 0.947245964
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.875000:R=7 0.94735124545
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.750000:R=7 0.9473976909
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.750000:R=7 0.9474485909
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.750000:R=7 0.9475138727
#
#bzcat "stats/$fn" | grep -F :R=5 | sort -k 2 -n | tail
#
# OUTPUT:
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=1.000000:R=5 0.93730393636
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=1.000000:R=5 0.93733117273
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.875000:R=5 0.93767555455
# S=15.000000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.875000:R=5 0.9376983
# S=12.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.875000:R=5 0.93772519091
# S=12.777778:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.875000:R=5 0.9377606545
# S=12.500000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.750000:R=5 0.9380457273
# S=15.000000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.750000:R=5 0.9380642727
# S=11.666667:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.750000:R=5 0.93810337273
# S=11.666667:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.750000:R=5 0.938148545
#}}}

#{{{ Optimal guided filter (chroma)
#
#fn="guided:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=MEANI:1.5:2:1e-5:10:PREI=1,1.125,1.5:I=1,2,3,4,6,8,10.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT: 
# MEANI=1.5:PREI=1.125:I=1 0.926061927
# MEANI=0.75:PREI=1.125:I=6 0.9263562818
# MEANI=0.75:PREI=1:I=6 0.926401109
# MEANI=1.5:PREI=1.5:I=1 0.930031873
# MEANI=0.75:PREI=1.5:I=4 0.9324472818
# MEANI=0.75:PREI=1.125:I=4 0.932685127
# MEANI=0.75:PREI=1:I=4 0.93270709
# MEANI=0.9375:PREI=1:I=2 0.9421686636
# MEANI=0.9375:PREI=1.125:I=2 0.942651127
# MEANI=0.9375:PREI=1.5:I=2 0.943026745
#}}}

#{{{ Optimal guided filter (anime, chroma)
#
#fn="guided:anime:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=MEANI:1.5:2:3e-3:10:E=0.001,0.0025,0.005,0.0075,0.01:PREI=1,1.125:I=1,2,3,4,6,8,10.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=0.75:E=0.01:PREI=1.125:I=2 0.954283159
# MEANI=0.75:E=0.01:PREI=1:I=2 0.954322068
# MEANI=0.75:E=0.0075:PREI=1.125:I=2 0.954745977
# MEANI=0.75:E=0.0075:PREI=1:I=2 0.9547795
# MEANI=0.75:E=0.005:PREI=1.125:I=2 0.95543764
# MEANI=0.75:E=0.005:PREI=1:I=2 0.9554467
# MEANI=1.5:E=0.001:PREI=1:I=2 0.955923773
# MEANI=1.5:E=0.001:PREI=1.125:I=2 0.95689466
# MEANI=1.5:E=0.0025:PREI=1:I=2 0.957237659
# MEANI=1.5:E=0.0025:PREI=1.125:I=2 0.957292341
#}}}

#{{{ Optimal guided LGC (chroma, necessarily)
#
### Guided LGC seems to slightly benefit from high E
#
### Guided LGC doesn't perform as well as regular guided
#
#fn="guided:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:10:E=0.001,0.01,0.1...1000.0:MEANI=1.75,2.0...5.0:I='SHARE_LUMA'.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# E=1.000000:MEANI=2.500000:I=SHARE_LUMA 0.92123644545
# E=10.000000:MEANI=2.500000:I=SHARE_LUMA 0.9212697273
# E=1000.000000:MEANI=2.500000:I=SHARE_LUMA 0.92127237273
# E=100.000000:MEANI=2.500000:I=SHARE_LUMA 0.92127273636
# E=0.010000:MEANI=2.000000:I=SHARE_LUMA 0.9307101636
# E=0.100000:MEANI=2.000000:I=SHARE_LUMA 0.9385577455
# E=1.000000:MEANI=2.000000:I=SHARE_LUMA 0.939119545
# E=10.000000:MEANI=2.000000:I=SHARE_LUMA 0.9391683273
# E=1000.000000:MEANI=2.000000:I=SHARE_LUMA 0.93917273
# E=100.000000:MEANI=2.000000:I=SHARE_LUMA 0.9391733182
#}}}

#{{{ Testing miscellaneous NLM options
#
### NLM's EP option doesn't perform well on SSIM, not a surprise:
#
#fn='NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:1.25:1e-6:Inf:EP=0,1.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.819476491
# S=5.533854:EP=1 0.893021327
# S=4:EP=0 0.897298291
#
### Adjusting DP/BP doesn't seem to help
#
#fn='NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:1.25:1e-6:Inf:DP=0.0,0.5...3.0:BP=0.0,0.5...3.0.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=4.5:DP=0:BP=3 0.889693291
# S=7.8125:DP=0.5:BP=1 0.88986745
# S=4.375:DP=0:BP=2.5 0.890410055
# S=4.5:DP=0:BP=2 0.891274636
# S=6.510417:DP=0.5:BP=0.5 0.891562055
# S=4.4:DP=0:BP=1.5 0.89235113
# S=5.25:DP=0.5:BP=0 0.893091036
# S=4.4:DP=0:BP=1 0.893733582
# S=4.2:DP=0:BP=0.5 0.895552418
# S=4:DP=0:BP=0 0.897298291
#
### XXX test RF=../guided.glsl vs RF=0 vs RF=<scale>
#}}}

