#!/bin/sh -e
# vi: foldmethod=marker
### Here are some observations about the data gathered from shader_test. 
### Think of this kinda like a jupyter notebook. The format goes:
#
#{{{ Section start
### Command
#code
# OUTPUT:
# the code's output
#}}} Section end

### XXX optimize HQ sharpening
### XXX test on different noise levels
### XXX test on softened noise
### XXX test temporal (including ME)

#{{{ Various upscalers
#
### FSR
#
#fn='shader=..\FSR.glsl_max=SHARPNESS=0.2_cfgopts=FSR_RCAS_DENOISE=0,1:FSR_EASU_DERING=0,1:FSR_EASU_SIMPLE_ANALYSIS=0,1:FSR_EASU_QUIT_EARLY=0,1_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# SHARPNESS=0.9906870163274357:FSR_RCAS_DENOISE=0:FSR_EASU_DERING=1:FSR_EASU_SIMPLE_ANALYSIS=1:FSR_EASU_QUIT_EARLY=0 0.9254036
# SHARPNESS=0.7382407784545016:FSR_RCAS_DENOISE=1:FSR_EASU_DERING=1:FSR_EASU_SIMPLE_ANALYSIS=1:FSR_EASU_QUIT_EARLY=0 0.925655
# SHARPNESS=0.040542281888994336:FSR_RCAS_DENOISE=1:FSR_EASU_DERING=0:FSR_EASU_SIMPLE_ANALYSIS=0:FSR_EASU_QUIT_EARLY=1 0.926152
# SHARPNESS=0.2076299506153132:FSR_RCAS_DENOISE=0:FSR_EASU_DERING=1:FSR_EASU_SIMPLE_ANALYSIS=0:FSR_EASU_QUIT_EARLY=1 0.9273278
# BASELINE=VF=scale=540:540 0.927599
# SHARPNESS=0.02118561726171398:FSR_RCAS_DENOISE=1:FSR_EASU_DERING=1:FSR_EASU_SIMPLE_ANALYSIS=0:FSR_EASU_QUIT_EARLY=1 0.9279524
# SHARPNESS=0.7642130223068646:FSR_RCAS_DENOISE=0:FSR_EASU_DERING=0:FSR_EASU_SIMPLE_ANALYSIS=0:FSR_EASU_QUIT_EARLY=0 0.9292174
# SHARPNESS=0.5973717114546601:FSR_RCAS_DENOISE=1:FSR_EASU_DERING=0:FSR_EASU_SIMPLE_ANALYSIS=0:FSR_EASU_QUIT_EARLY=0 0.9294536
# SHARPNESS=0.6798371528256095:FSR_RCAS_DENOISE=0:FSR_EASU_DERING=1:FSR_EASU_SIMPLE_ANALYSIS=0:FSR_EASU_QUIT_EARLY=0 0.9312334
# SHARPNESS=0.3740119561946632:FSR_RCAS_DENOISE=1:FSR_EASU_DERING=1:FSR_EASU_SIMPLE_ANALYSIS=0:FSR_EASU_QUIT_EARLY=0 0.9312778
#
### FSRCNNX
#
#fn='shader=..\FSRCNNX_x2_8-0-4-1.glsl_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# NO_CFGOPTS 0.9498638
#
#fn='shader=..\FSRCNNX_x2_16-0-4-1.glsl_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# NO_CFGOPTS 0.9525342
#
### AviSynth
#
#fn='shader=..\AiUpscale_HQ_2x_Photo.glsl_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# NO_CFGOPTS 0.9562568
#
#}}}

#{{{ Optimal non-local means 2x upscale (luma)
#
### Upscale w/ SKIP_PATCH=1:WD=0 (i.e., regular upscaler, no NLM)
#
#fn='max=SW=0.811199300207978:SS=1.3870308622552656_cfgopts=CFG_SIZE="2*":RF_LUMA=0:RF=0:R=7:RS=8:SK="sphinx_":WD=0:SKIP_PATCH=1_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# SW=0.9756241983119647:SS=1.3800229899191112:CFG_SIZE=2*:RF_LUMA=0:RF=0:R=7:RS=8:SK=sphinx_:WD=0:SKIP_PATCH=1 0.9335504
#
### SKIP_PATCH=0 brings a minor improvement
#
#fn='max=S=16.90809288548364:SW=0.811199300207978:SS=1.3870308622552656_cfgopts=CFG_SIZE="2*":RF_LUMA="2*":RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK="sphinx_":WD=0_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# S=16.790106011801686:SW=0.8439779133680052:SS=1.3845625416648042:CFG_SIZE=2*:RF_LUMA=2*:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK=sphinx_:WD=0 0.9354282
#
### Some sharpening slightly improves the result
#
#fn='max=S=16.790:SW=0.843:SS=1.384:ASF=0.322:ASA=2.079:ASP=0.766:ASS=0.5_cfgopts=CFG_SIZE="2*":RF_LUMA="2*":AS=1:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK="sphinx_":WD=0_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# S=14.293463456562394:SW=0.9499091882207018:SS=1.3535341100203313:ASF=0.27009947929683664:ASA=2.878850016377589:ASP=1.3270155277889872:ASS=0.6313543541385903:CFG_SIZE=2*:RF_LUMA=2*:AS=1:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK=sphinx_:WD=0 0.9362068
#
### ASK=sphinx_ is slightly better
#
#fn='max=S=14.29:SW=0.94:SS=1.35:ASF=0.27:ASA=2.87:ASP=1.32:ASS=0.63_cfgopts=CFG_SIZE="2*":RF_LUMA="2*":AS=1:ASK="gaussian","sphinx","sphinx_","lanczos","sinc":RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK="sphinx_":WD=0_corruption=VF=scale=540:540_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=scale=540:540 0.927599
# S=14.393197588823167:SW=0.9410491874403374:SS=1.3555973095618303:ASF=0.270251137814597:ASA=2.868536552787597:ASP=1.3141582836915093:ASS=0.6343126838573611:CFG_SIZE=2*:RF_LUMA=2*:AS=1:ASK=gaussian:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK=sphinx_:WD=0 0.9362268
# S=16.281897169179224:SW=0.9168234129931957:SS=1.341709001839967:ASF=0.26536969321624676:ASA=2.8285839413908818:ASP=1.2052255249045127:ASS=0.5947163032308064:CFG_SIZE=2*:RF_LUMA=2*:AS=1:ASK=lanczos:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK=sphinx_:WD=0 0.9363442
# S=14.907578028533363:SW=0.9552995731412706:SS=1.347402646564987:ASF=0.2728692886280072:ASA=2.939698679289148:ASP=1.2224074002756578:ASS=0.6325605924993604:CFG_SIZE=2*:RF_LUMA=2*:AS=1:ASK=sphinx:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK=sphinx_:WD=0 0.9365276
# S=15.12641317694393:SW=0.9207598600362319:SS=1.3477046283638856:ASF=0.273226268781436:ASA=2.984443590805481:ASP=1.1985686966258189:ASS=0.588175904177191:CFG_SIZE=2*:RF_LUMA=2*:AS=1:ASK=sinc:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK=sphinx_:WD=0 0.936529
# S=14.625674200642456:SW=0.9489798634344688:SS=1.3395520508703291:ASF=0.2860809718507155:ASA=2.9603039961661994:ASP=1.1626587678544977:ASS=0.649879391277991:CFG_SIZE=2*:RF_LUMA=2*:AS=1:ASK=sphinx_:RF=0:SF=3:PS=0:RI=7:R=7:RS=8:SK=sphinx_:WD=0 0.937004
#
#}}}

#{{{ Optimal non-local means (luma, P=3:R=5:PS=3:RS=3)
#
#fn='max=S=2.1195309092809933:SS=0.5136419089326144:SW=1.3279189126128106:WDT=0.3350669844054246:CS=0.11643442361134813_cfgopts=C=1:CK="gaussian","triangle","sphinx","sinc","lanczos","bicubic","cos"_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8704759
# S=2.1195517069129024:SS=0.5116427047602393:SW=1.3212225552745034:WDT=0.3384463725901039:CS=0.11425358562600552:C=1:CK=cos 0.95763638
# S=2.1317712526225185:SS=0.5072602335799573:SW=1.3489879120692236:WDT=0.3446215060443281:CS=0.11387534259064375:C=1:CK=lanczos 0.95763896
# S=2.104286078031876:SS=0.491409221083996:SW=1.379548408081092:WDT=0.3394264898749439:CS=0.11599233988144232:C=1:CK=triangle 0.95763912
# S=2.111137562289296:SS=0.5088004063650284:SW=1.3523435121744876:WDT=0.3473606758243999:CS=0.12046611783078189:C=1:CK=bicubic 0.9576392
# S=2.1312600470240874:SS=0.4996968758515583:SW=1.392531340393257:WDT=0.3443197724172591:CS=0.11713071417766713:C=1:CK=sinc 0.95763996
# S=2.113068688032988:SS=0.504256439563008:SW=1.3425540016357456:WDT=0.3575664168778142:CS=0.11787353509547227:C=1:CK=sphinx 0.95764032
# S=2.1358069099375805:SS=0.4963413520882072:SW=1.3851113871182668:WDT=0.34900622109009416:CS=0.11904582939003354:C=1:CK=gaussian 0.957641
#
#}}}

#{{{ Optimal non-local means (luma, P=3:R=5:PS=4:RS=3:WD=1:RI=0:RFI=0:RF_LUMA=0)
#
### Suprisingly this performs almost as well as regular NLM
#
#fn='max=S=3.5968056672833097:SS=0.49764743714339127:SW=0.7392620481427672:WDT=0.580415381682815:WDP=5.381278367349288_cfgopts=PS=4:WD=1:RF=0:RF_LUMA=0:RI=0:RFI=0_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8704759
# S=3.6280599151151334:SS=0.5072938692870894:SW=0.717967659498257:WDT=0.5509878334105431:WDP=5.402102275251726:PS=4:WD=1:RF=0:RF_LUMA=0:RI=0:RFI=0 0.9556407
#
#}}}

#{{{ Optimal non-local means (luma, P=3:R=9:PS=0,3)
#
### Old HQ setup (actually not even better than the default NLM config):
#
#fn='max=S=2.0262062762852167:SW=1.3322924870317203:WDT=0.11832010376003192:CS=0.11643442361134813:SS=0.5045657681048714_cfgopts=RF_LUMA="..\nlmeans.glsl":RF=0:P=4:PS=6:RI=0:RFI=0_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8704759
# S=2.0884039678444273:SW=1.2906824967986987:WDT=0.11997793124885203:CS=0.1157297896752585:SS=0.5107194046673336:RF_LUMA=../nlmeans.glsl:RF=0:P=4:PS=6:RI=0:RFI=0 0.95763922
#
### Using the default PS w/ the same guide isn't any better either
#
#fn='max=S=2.0262062762852167:SW=1.3322924870317203:WDT=0.11832010376003192:CS=0.11643442361134813:SS=0.5045657681048714_cfgopts=RF_LUMA="..\nlmeans.glsl":RF=0_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8704759
# S=2.194339325241396:SW=1.5039312828744629:WDT=0.12606467769473573:CS=0.11342967670570225:SS=0.49323751199125954:RF_LUMA=../nlmeans.glsl:RF=0 0.9573311
#
### R=7 provides a jump in quality, R=9 is slightly better
### PS=0 isn't very helpful
#
#fn='max=S=2.0262062762852167:SW=1.3322924870317203:WDT=0.11832010376003192:CS=0.11643442361134813:SS=0.5045657681048714_cfgopts=PS=0,3:R=7,9_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8704759
# S=1.7055118744884838:SW=1.5498015284652877:WDT=0.051706215395275035:CS=0.12988122088316678:SS=0.43091829774595714:PS=3:R=7 0.95930272
# S=1.6377278249467442:SW=1.2985313176711841:WDT=0.1154022745312668:CS=0.07587678583760646:SS=0.4756520009512866:PS=0:R=7 0.95937748
# S=1.5883454859910897:SW=1.3402851118162757:WDT=0.1609201856257531:CS=0.08543648971216446:SS=0.46766680472355143:PS=0:R=9 0.95972522
# S=1.4460272592109746:SW=1.812902116179249:WDT=0.07232509380556876:CS=0.1060139658565394:SS=0.2952259847265974:PS=3:R=9 0.9599204
#
### PST doesn't help
#
#fn='max=S=2.0262062762852167:SW=1.3322924870317203:WDT=0.11832010376003192:CS=0.11643442361134813:SS=0.5045657681048714:PSS=0.05_cfgopts=PS=0,3:R=7,9:PST=1_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8704759
# S=1.7015417421894348:SW=1.5109426801243715:WDT=0.09643439436594814:CS=0.1439829259499698:SS=0.43094406787170236:PSS=0.059623622309908975:PS=3:R=7:PST=1 0.9593201
# S=1.661601763119326:SW=1.249971849867724:WDT=0.0986234385758203:CS=0.15185578131186392:SS=0.5004664592067696:PSS=0.06141820563790836:PS=0:R=7:PST=1 0.9593693
# S=1.6005526191661121:SW=1.3727514424847589:WDT=0.18489356172037327:CS=0.08242941571854472:SS=0.46238369466924334:PSS=0.07037358291104004:PS=0:R=9:PST=1 0.95973714
# S=1.5274579485673585:SW=1.7377299013621041:WDT=0.15679873659866037:CS=0.08541335729302772:SS=0.34563414130426956:PSS=0.043595179635101705:PS=3:R=9:PST=1 0.9599859
#
### RS=8 isn't any better
#
#fn='max=S=2.0262062762852167:SW=1.3322924870317203:WDT=0.11832010376003192:CS=0.11643442361134813:SS=0.5045657681048714_cfgopts=PS=0,3:R=9:RS=8_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8704759
# S=1.6897928711428607:SW=1.638652490148623:WDT=0.07946154633752077:CS=0.09953664228510625:SS=0.3568431557615797:PS=0:R=9:RS=8 0.95914056
# S=1.6728748243447111:SW=2.0153030409524617:WDT=0.12935931670490133:CS=0.11878115231159823:SS=0.2591949059100791:PS=3:R=9:RS=8 0.95925054
#
#}}}

#{{{ Optimal non-local means (chroma, P=3:R=5:PS=3:RS=3:WD=1:RF=0)
#
#fn='max=S=5.191526541606411:SS=0.32091162692066677:SW=0.6448288408806067:WDT=0.913447511792627:WDP=5.832936323930807_cfgopts=WD=1:RF=0:RF_LUMA=0_plane=CHROMA_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.72809122
# S=5.100920322105462:SS=0.31580805565941705:SW=0.6429313578248627:WDT=0.9385150042004405:WDP=5.692202343435388:WD=1:RF=0:RF_LUMA=0 0.95800643
#
#}}}

#{{{ Optimal non-local means (chroma, P=3:R=5:PS=3:RS=3)
#
#fn='max=S=2.5168955531436197:SW=1.2219854377433914:SS=0.26295970436981203_plane=CHROMA_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.72809122
# S=2.356425745363608:SW=1.2033038941856653:SS=0.2660216669677905: 0.95838335
#
#}}}

#{{{ Optimal non-local means (chroma, R=9:PS=3)
#
### Pretty significant improvement over P=3:R=5:PS=3:RS=3
#
#fn='max=S=2.356425745363608:SW=1.2033038941856653:SS=0.2660216669677905_cfgopts=R=7,9_plane=CHROMA_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.72809122
# S=1.7063680940478512:SW=1.3505166176355574:SS=0.2554001965587911:R=7 0.96699413
# S=1.359261923810611:SW=1.4903543760666318:SS=0.17336705987012963:R=9 0.97037197
#
### RS=8 isn't useful here either
#
#fn='max=S=2.356425745363608:SW=1.2033038941856653:SS=0.2660216669677905_cfgopts=R=9:RS=8_plane=CHROMA_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.72809122
# S=1.630432765983884:SW=1.46645760269076:SS=0.16682383303850284:R=9:RS=8 0.96727161
#
#}}}

#{{{ Optimal non-local means sharpening (luma, P=3:R=5:PS=3:RS=3)
#
#fn='max=ASF=0.32285346195725034:ASA=2.0793936417006034:ASP=0.7663643239915433:ASS=0.5045657681048714_cfgopts=AS=2_corruption=VF=gblur=0.625_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=gblur=0.625 0.984123
# ASF=0.33601621398748727:ASA=1.5888035748874212:ASP=0.774983233249299:ASS=0.5719749795133183:AS=2 0.994699
#
### Not a huge difference between most of the kernels
#
#fn='max=ASF=0.33601621398748727:ASA=1.5888035748874212:ASP=0.774983233249299:ASS=0.5719749795133183_cfgopts=AS=2:ASK="bicubic","cos","gaussian","lanczos","quadratic","sinc","sphinx","sphinx_"_corruption=VF=gblur=0.625_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=gblur=0.625 0.984123
# ASF=0.2917001903316964:ASA=1.5003560777998832:ASP=0.7320844006189042:ASS=0.4826032577274105:AS=2:ASK=quadratic 0.9946876
# ASF=0.2602635357668688:ASA=0.7277275062113345:ASP=0.7215934605378271:ASS=0.3007354547702201:AS=2:ASK=lanczos 0.9947044
# ASF=0.33804189846031335:ASA=1.5859234910759994:ASP=0.7742030244170538:ASS=0.591230775175186:AS=2:ASK=gaussian 0.994705
# ASF=0.3358413131209033:ASA=1.4227642041398365:ASP=0.7756821109330934:ASS=0.5030407998602682:AS=2:ASK=bicubic 0.9947164
# ASF=0.3578539804484596:ASA=1.5653226206603517:ASP=0.7850548173471764:ASS=0.547473672527261:AS=2:ASK=sphinx_ 0.9947196
# ASF=0.31762279868219395:ASA=1.605610734262506:ASP=0.753308664509425:ASS=0.672905582838357:AS=2:ASK=cos 0.9947222
# ASF=0.32939884237608347:ASA=1.476808660317915:ASP=0.7672656330714375:ASS=0.5443016892908995:AS=2:ASK=sphinx 0.994724
# ASF=0.3210768548589939:ASA=0.9397860227779741:ASP=0.7654083023321232:ASS=0.4031301466402857:AS=2:ASK=sinc 0.9947354
#
### Negligible difference between variants of sinc
#
#fn='max=ASF=0.3210768548589939:ASA=0.9397860227779741:ASP=0.7654083023321232:ASS=0.4031301466402857_cfgopts=AS=2:ASK="sinc","sinc3","sinc_"_corruption=VF=gblur=0.625_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=gblur=0.625 0.984123
# ASF=0.3343646991050285:ASA=0.9410860689051156:ASP=0.7748407632455074:ASS=0.4057595983754749:AS=2:ASK=sinc3 0.9947326
# ASF=0.32098661593383554:ASA=0.9357873244060593:ASP=0.7635881544796842:ASS=0.40432021911858845:AS=2:ASK=sinc 0.9947342
# ASF=0.32083084963733016:ASA=0.9515235214478386:ASP=0.7657149926555595:ASS=0.40261557167463136:AS=2:ASK=sinc_ 0.9947356
#
#}}}

#{{{ Optimal non-local means sharpening (chroma, P=3:R=5:PS=3:RS=3)
#
### Very small improvement
#
#fn='max=ASF=0.4354962904391772:ASA=1.5030618930570498:ASP=0.9221831656023989:ASS=0.2660216669677905_cfgopts=AS=2_corruption=VF=gblur=0.625_plane=CHROMA_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=gblur=0.625 0.997152
# ASF=0.45029590697253385:ASA=1.487819767673339:ASP=0.9232979080638256:ASS=0.2446652682977203:AS=2 0.9971626
#
### Not much difference between kernels
#
#fn='max=ASF=0.45029590697253385:ASA=1.487819767673339:ASP=0.9232979080638256:ASS=0.2446652682977203_cfgopts=AS=2:ASK="bicubic","cos","gaussian","lanczos","quadratic","sinc","sphinx","sphinx_"_corruption=VF=gblur=0.625_plane=CHROMA_media=images.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=VF=gblur=0.625 0.997152
# ASF=0.455833203843563:ASA=1.497016993715753:ASP=0.9296669883098448:ASS=0.24166819163889686:AS=2:ASK=quadratic 0.9971566
# ASF=0.4513685691215494:ASA=0.9207835235065356:ASP=0.9367296403072826:ASS=0.15638105000208516:AS=2:ASK=lanczos 0.9971601
# ASF=0.4716371022718974:ASA=1.5321023407129024:ASP=0.9388539301913101:ASS=0.24908011103080702:AS=2:ASK=bicubic 0.9971608
# ASF=0.4596864322002955:ASA=1.4620411405881604:ASP=0.9335410245064778:ASS=0.23030004981517596:AS=2:ASK=gaussian 0.9971643
# ASF=0.4749073415147044:ASA=1.5275203217470963:ASP=0.9378341599920452:ASS=0.23895809385512276:AS=2:ASK=sphinx 0.9971649
# ASF=0.560784592899954:ASA=1.6067229402090881:ASP=0.9799121056845121:ASS=0.1650955457958691:AS=2:ASK=sinc 0.9971723
# ASF=0.6652855527743423:ASA=1.8394635037096296:ASP=1.0071113598746826:ASS=0.25183590909796133:AS=2:ASK=cos 0.9971775
# ASF=0.6267063361944475:ASA=1.9701543289754333:ASP=1.0024630095639717:ASS=0.05977279329812535:AS=2:ASK=sphinx_ 0.9971795
#
#}}}

#{{{ Optimal NLM LGC
#
#fn="NLM:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:10:3:1e-6:10:RF='SHARE_LUMA':D1W=1:RI=3:RFI=2:WDT=0.0,0.25...1.5:SW=1.0,0.875,0.75:R=3,5,7.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=8.888889:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.750000:R=7 0.9465736909
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=1.000000:R=7 0.94704555455
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=1.000000:R=7 0.94706957273
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=1.000000:R=7 0.9471524091
# S=7.500000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.875000:R=7 0.947231364
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.875000:R=7 0.947245964
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.875000:R=7 0.94735124545
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.750000:R=7 0.9473976909
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.750000:R=7 0.9474485909
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.750000:R=7 0.9475138727
#
#bzcat "stats/$fn" | grep -F :R=5 | sort -k 2 -n | tail
#
# OUTPUT:
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=1.000000:R=5 0.93730393636
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=1.000000:R=5 0.93733117273
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.875000:R=5 0.93767555455
# S=15.000000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.875000:R=5 0.9376983
# S=12.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.875000:R=5 0.93772519091
# S=12.777778:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.875000:R=5 0.9377606545
# S=12.500000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.750000:R=5 0.9380457273
# S=15.000000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.750000:R=5 0.9380642727
# S=11.666667:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.750000:R=5 0.93810337273
# S=11.666667:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.750000:R=5 0.938148545
#}}}

