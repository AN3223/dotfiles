#!/bin/sh -e
### Here are some observations about the data gathered from shader_test. 
### Think of this kinda like a jupyter notebook. The format goes:
#
### Comment
#code
# OUTPUT:
# the code's output

### XXX testing is new and incomplete, take everything with a grain of salt

### XXX test SS
### XXX test RF=../guided.glsl vs RF=0 vs RF=<scale>
### XXX make this foldable in vim?
### XXX test HQ (including PSS)
### XXX test on different noise levels
### XXX test on a wide variety of test images
### XXX test LQ
### XXX test temporal (including ME)

### Optimal non-local means (luma, P=3:R=5:PS=3:RS=3)
#
#fn="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:1.25:1e-6:10:WDT=0.0,0.125...1.25:SW=1.0,0.875...0.5:EP=0.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=1.843200:WDT=0.250000:SW=1.000000:EP=0 0.9026228
# S=1.843200:WDT=0.375000:SW=0.750000:EP=0 0.9026376182
# S=1.843200:WDT=0.250000:SW=0.875000:EP=0 0.9026382364
# S=1.843200:WDT=0.375000:SW=0.875000:EP=0 0.902652909
# S=1.945600:WDT=0.500000:SW=0.750000:EP=0 0.90265636
# S=1.945600:WDT=0.375000:SW=1.000000:EP=0 0.9026826545
# S=2.150400:WDT=0.625000:SW=0.875000:EP=0 0.902686
# S=2.048000:WDT=0.500000:SW=0.875000:EP=0 0.9027000545
# S=2.252800:WDT=0.625000:SW=1.000000:EP=0 0.902720145
# S=2.048000:WDT=0.500000:SW=1.000000:EP=0 0.902725527
#

### Optimal non-local means (luma, P=4:PS=6:RI=0:RFI=0)
#
#fn1="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:3:2:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=0.25,0.375...0.75:SW=1.0,0.875:SS=1_16,1_8...0.375:EP=0.stats.bz2"
#fn2="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:3:2:1e-6:10:P=4:PS=6:RI=0:RFI=0:WDT=0.75,0.875...1.125:SW=1.0,0.875:SS=0.125,0.25,0.375:EP=0.stats.bz2"
#fn3="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.125:1e-6:Inf:P=4:PS=6:RI=0:RFI=0:WDT=0.75:SW=1.0,0.875:SS=0.25:EP=0.stats.bz2"
#bzcat "stats/$fn1" "stats/$fn2" "stats/$fn3" | sort -k 2 -n | uniq | tail
#
# OUTPUT:
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.625000:SW=0.875000:SS=0.375000:EP=0 0.9037757636
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.625000:SW=0.875000:SS=0.312500:EP=0 0.90378036
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.187500:EP=0 0.9037872909
# S=2.375000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.312500:EP=0 0.9037937818
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:SS=0.187500:EP=0 0.903801309
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:SS=0.250000:EP=0 0.9038554727
# S=2.500000:P=4:PS=6:RI=0:RFI=0:WDT=0.875000:SW=0.875000:SS=0.125000:EP=0 0.90385909
# S=2.320313:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=1.000000:SS=0.250000:EP=0 0.9038785818
# S=2.375000:P=4:PS=6:RI=0:RFI=0:WDT=0.875000:SW=1.000000:SS=0.125000:EP=0 0.9038870727
# S=2.250000:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:EP=0 0.9038942727
#

# PS=6:NG=0 rotations/reflections appear to be broken/bad
#
#fn="NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:2:1.25:1e-6:10:P=4:PS=6:RI=0,3:RFI=0,2:WDT=0.75:SW=0.875:SS=0.25:NG=0,1:EP=0.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.8194764909
# S=1.600000:P=4:PS=6:RI=3:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.8980376
# S=1.800000:P=4:PS=6:RI=3:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.8992544727
# S=1.800000:P=4:PS=6:RI=3:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.9009878545
# S=1.706667:P=4:PS=6:RI=3:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.9015264727
# S=2.116667:P=4:PS=6:RI=0:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.9031447818
# S=2.150000:P=4:PS=6:RI=0:RFI=2:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.903418764
# S=2.317708:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=0:EP=0 0.903894
# S=2.317708:P=4:PS=6:RI=0:RFI=0:WDT=0.750000:SW=0.875000:SS=0.250000:NG=1:EP=0 0.903894
#

### Optimal non-local means (chroma, P=3:R=5:PS=3:RS=3)
#
### (I specified the optimal guided parameters, but they happen to be 
### the defaults, so they can be ignored)
#
#fn="NLM:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:2:1e-6:10:GUIDED_MEANI=1.5:GUIDED_I=1.0:GUIDED_PREI=1.25:WDT=0.0,0.125...1.25:SW=1.0,0.875...0.5:RF='.._guided.glsl'.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
# OUTPUT:
# S=15.000000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.875000:SW=0.500000:RF=../guided.glsl 0.93798715455
# S=4.062500:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.625000:SW=0.625000:RF=../guided.glsl 0.93798997273
# S=5:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.750000:SW=0.625000:RF=../guided.glsl 0.93805900909
# S=3.750000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.250000:SW=0.500000:RF=../guided.glsl 0.9381306545
# S=3.437500:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.125000:SW=0.500000:RF=../guided.glsl 0.9381328727
# S=3.437500:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.000000:SW=0.500000:RF=../guided.glsl 0.9381378636
# S=3.750000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.375000:SW=0.500000:RF=../guided.glsl 0.93813826364
# S=3.750000:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.500000:SW=0.500000:RF=../guided.glsl 0.93816037273
# S=3.854167:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.625000:SW=0.500000:RF=../guided.glsl 0.93819815455
# S=5:GUIDED_MEANI=1.500000:GUIDED_I=1.000000:GUIDED_PREI=1.250000:WDT=0.750000:SW=0.500000:RF=../guided.glsl 0.938249636
#

### Optimal guided filter (luma)
#
### Surprisingly, MEANI < 1 is actually better in some cases, although 
### it's slower, so it's not really practical
#
### MEANI really likes multiples of 0.25, (the maximizer gets stuck in a 
### loop if it starts searching slightly higher/lower than 1.5)
#
#fn="guided:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=MEANI:1.5:2:3e-3:10:E=0.001,0.0025,0.005,0.0075,0.01:PREI=1,1.125...1.5:I=1,2,3,4.stats.bz2"
#bzcat "stats/$fn" | grep BASELINE
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.819476491
#
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=1.5:E=0.001:PREI=1:I=1 0.891042782
# MEANI=0.75:E=0.0025:PREI=1.5:I=1 0.891849873
# MEANI=1.5:E=0.0025:PREI=1.375:I=1 0.892759109
# MEANI=1.5:E=0.0025:PREI=1.25:I=1 0.893501418
# MEANI=1.5:E=0.0025:PREI=1.125:I=1 0.894048255
# MEANI=1.5:E=0.0025:PREI=1:I=1 0.89437764
# MEANI=1.5:E=0.001:PREI=1.5:I=1 0.895546582
# MEANI=1.5:E=0.001:PREI=1.125:I=1 0.89563142
# MEANI=1.5:E=0.001:PREI=1.375:I=1 0.8957968
# MEANI=1.5:E=0.001:PREI=1.25:I=1 0.895904055
#
#bzcat "stats/$fn" | grep -F :I=2 | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=0.375:E=0.0025:PREI=1.5:I=2 0.870801945
# MEANI=0.375:E=0.0025:PREI=1.375:I=2 0.87102095
# MEANI=0.375:E=0.0025:PREI=1.25:I=2 0.87133773
# MEANI=0.5625:E=0.0025:PREI=1.125:I=2 0.871566055
# MEANI=0.75:E=0.0025:PREI=1:I=2 0.87180127
# MEANI=0.75:E=0.001:PREI=1.5:I=2 0.888474818
# MEANI=0.75:E=0.001:PREI=1.375:I=2 0.8887018
# MEANI=0.75:E=0.001:PREI=1:I=2 0.889102927
# MEANI=0.75:E=0.001:PREI=1.25:I=2 0.88914895
# MEANI=0.75:E=0.001:PREI=1.125:I=2 0.889274491
#
#bzcat "stats/$fn" | grep -F :I=3 | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=1.5:E=0.0025:PREI=1.5:I=3 0.840087891
# MEANI=1.5:E=0.0025:PREI=1.375:I=3 0.8514126
# MEANI=1.5:E=0.0025:PREI=1.25:I=3 0.853154218
# MEANI=1.5:E=0.0025:PREI=1.125:I=3 0.855044255
# MEANI=1.5:E=0.0025:PREI=1:I=3 0.862426836
# MEANI=1.5:E=0.001:PREI=1.5:I=3 0.8639341
# MEANI=1.5:E=0.001:PREI=1.375:I=3 0.872605891
# MEANI=1.5:E=0.001:PREI=1.25:I=3 0.8738773
# MEANI=1.5:E=0.001:PREI=1.125:I=3 0.875325582
# MEANI=1.5:E=0.001:PREI=1:I=3 0.878092582
#
#bzcat "stats/$fn" | grep -F :I=4 | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=1.5:E=0.0025:PREI=1.5:I=4 0.8435852
# MEANI=1.5:E=0.0025:PREI=1.375:I=4 0.844330055
# MEANI=1.5:E=0.0025:PREI=1.25:I=4 0.844942291
# MEANI=1.5:E=0.0025:PREI=1.125:I=4 0.845373491
# MEANI=1.5:E=0.0025:PREI=1:I=4 0.84602633
# MEANI=1.5:E=0.001:PREI=1.5:I=4 0.870876564
# MEANI=1.5:E=0.001:PREI=1.375:I=4 0.871276436
# MEANI=1.5:E=0.001:PREI=1.25:I=4 0.8717232
# MEANI=1.5:E=0.001:PREI=1.125:I=4 0.87195318
# MEANI=1.5:E=0.001:PREI=1:I=4 0.872120982
#
### A small amount of PREI subsampling does indeed improve quality
#
#bzcat "stats/$fn" | sort -k 2 -n | tail -n 3
#
# OUTPUT:
# MEANI=1.5:E=0.001:PREI=1.125:I=1 0.89563142
# MEANI=1.5:E=0.001:PREI=1.375:I=1 0.8957968
# MEANI=1.5:E=0.001:PREI=1.25:I=1 0.895904055
#
#bzcat "stats/$fn" | grep -F :PREI=1: | sort -k 2 -n | tail -n 3
#
# OUTPUT:
# MEANI=0.75:E=0.005:PREI=1:I=1 0.890238818
# MEANI=1.5:E=0.001:PREI=1:I=1 0.891042782
# MEANI=1.5:E=0.0025:PREI=1:I=1 0.89437764
#

### Upscaling
#
### shader_test works for testing upscalers
#
#fn='FSRCNNX_x2_8-0-4-1:images:LUMA:SCALE=540:540:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# BASELINE=SCALE=540:540 0.927599
# NO_CFGOPTS 0.9498638
#
### Bicubic is scale's default
#
#fn='FSRCNNX_x2_8-0-4-1:images:LUMA:SCALE=540:540:flags=bicubic:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# BASELINE=SCALE=540:540:flags=bicubic 0.927599
# NO_CFGOPTS 0.9498638
#
### Lanczos is better
#
#fn='FSRCNNX_x2_8-0-4-1:images:LUMA:SCALE=540:540:flags=lanczos:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# BASELINE=SCALE=540:540:flags=lanczos 0.9326444
# NO_CFGOPTS 0.9505084
#
### nlmeans_2x is worse than baseline lol
#
#fn='NLM_2x:images:LUMA:SCALE=540:540:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9022264
# BASELINE=SCALE=540:540 0.927599
#

### Reverse chroma subsampling
#
### Nothing seems to perform very well
#
#fn='KrigBilateral:images:CHROMA:FORMAT=yuv420p:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9862585
# BASELINE=FORMAT=yuv420p 0.9867304
#
#fn='NLM_lgc:images:CHROMA:FORMAT=yuv420p:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9861952
# BASELINE=FORMAT=yuv420p 0.9867304
#
### Guided LGC scored much lower
#
#fn='guided_lgc:images:CHROMA:FORMAT=yuv420p:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:Inf:.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n
#
# OUTPUT:
# NO_CFGOPTS 0.9731073
# BASELINE=FORMAT=yuv420p 0.9867304
#

### NLM's EP option doesn't perform well on SSIM, not a surprise:
#
#fn='NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:1.25:1e-6:Inf:EP=0,1.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# BASELINE=NOISE=10:10 0.819476491
# S=5.533854:EP=1 0.893021327
# S=4:EP=0 0.897298291
#
### Adjusting DP/BP doesn't seem to help
#
#fn='NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:1.25:1e-6:Inf:DP=0.0,0.5...3.0:BP=0.0,0.5...3.0.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=4.5:DP=0:BP=3 0.889693291
# S=7.8125:DP=0.5:BP=1 0.88986745
# S=4.375:DP=0:BP=2.5 0.890410055
# S=4.5:DP=0:BP=2 0.891274636
# S=6.510417:DP=0.5:BP=0.5 0.891562055
# S=4.4:DP=0:BP=1.5 0.89235113
# S=5.25:DP=0.5:BP=0 0.893091036
# S=4.4:DP=0:BP=1 0.893733582
# S=4.2:DP=0:BP=0.5 0.895552418
# S=4:DP=0:BP=0 0.897298291
#

### Optimal guided filter for injection into NLM (luma)
#
### Same as the optimal guided filter
#
#fn='NLM:images:LUMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:5:1.25:1e-6:Inf:GUIDED_E=0.001,0.0025,0.005,0.0075,0.01:GUIDED_MEANI=1.375,1.5,1.625:GUIDED_PREI=1.125,1.25,1.5,1.75:EP=0.stats.bz2'
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=3.04:GUIDED_E=0.0025:GUIDED_MEANI=1.5:GUIDED_PREI=1.125:EP=0 0.896795145
# S=4.75:GUIDED_E=0.001:GUIDED_MEANI=1.375:GUIDED_PREI=1.125:EP=0 0.896862873
# S=4.5:GUIDED_E=0.001:GUIDED_MEANI=1.375:GUIDED_PREI=1.25:EP=0 0.896891855
# S=3.8:GUIDED_E=0.001:GUIDED_MEANI=1.625:GUIDED_PREI=1.5:EP=0 0.897049036
# S=3.666667:GUIDED_E=0.001:GUIDED_MEANI=1.5:GUIDED_PREI=1.75:EP=0 0.89707505
# S=4.4:GUIDED_E=0.001:GUIDED_MEANI=1.625:GUIDED_PREI=1.125:EP=0 0.897140491
# S=4.2:GUIDED_E=0.001:GUIDED_MEANI=1.625:GUIDED_PREI=1.25:EP=0 0.897172836
# S=4:GUIDED_E=0.001:GUIDED_MEANI=1.5:GUIDED_PREI=1.5:EP=0 0.89724473
# S=4.583333:GUIDED_E=0.001:GUIDED_MEANI=1.5:GUIDED_PREI=1.125:EP=0 0.897384418
# S=4.4:GUIDED_E=0.001:GUIDED_MEANI=1.5:GUIDED_PREI=1.25:EP=0 0.8974382
#

### XXX retest
### NLM guided by fast guided filter seems to work very well for anime
#
#fn="NLM:mountain_adventurer:LUMA:NOISE=10:RZ=10:CAT=1:S=3.5,5,6.25:RF='.._guided.glsl':GUIDED_MEANI=1.375,1.5,1.625:GUIDED_E=0.0009,0.0010...0.0015:GUIDED_PREI=1.25,1.5...2.0:GUIDED_I=1,2,3,4.stats.bz2"
#bzcat "stats/$fn" | sort -k 3 -n | tail
#
# OUTPUT:
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0012:GUIDED_PREI=2:GUIDED_I=2 Y 0.9289317 U 0.8519957 V 0.8507858 All 0.9030847
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0013:GUIDED_PREI=2:GUIDED_I=2 Y 0.9289331 U 0.8519958 V 0.8507859 All 0.9030857
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0013:GUIDED_PREI=1.25:GUIDED_I=2 Y 0.9289519 U 0.8519961 V 0.8507862 All 0.9030984
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0012:GUIDED_PREI=1.5:GUIDED_I=2 Y 0.9289568 U 0.8519959 V 0.8507862 All 0.9031017
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.001:GUIDED_PREI=1.25:GUIDED_I=2 Y 0.9289623 U 0.851995 V 0.850786 All 0.9031051
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0009:GUIDED_PREI=1.5:GUIDED_I=2 Y 0.928966 U 0.8519978 V 0.8507864 All 0.9031082
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0012:GUIDED_PREI=1.25:GUIDED_I=2 Y 0.9289784 U 0.8519951 V 0.8507861 All 0.9031158
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0011:GUIDED_PREI=1.25:GUIDED_I=2 Y 0.9289878 U 0.8519961 V 0.8507862 All 0.9031222
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.0011:GUIDED_PREI=1.5:GUIDED_I=2 Y 0.92899 U 0.8519956 V 0.8507863 All 0.9031238
# S=3.5:RF=../guided.glsl:GUIDED_MEANI=1.5:GUIDED_E=0.001:GUIDED_PREI=1.5:GUIDED_I=2 Y 0.9289957 U 0.8519934 V 0.8507864 All 0.903127
#
### Non-fast guided filter seems to work best when standalone though
#
### Also worth noting that this is outperforming NLM
#
#fn="guided:mountain_adventurer:LUMA:NOISE=10:RZ=10:CAT=1:MEANI=1.375,1.5,1.625:E=0.0009,0.0010...0.0015:PREI=1.25,1.5...2.0:I=1,2,3,4.stats.bz2"
#bzcat "stats/$fn" | sort -k 3 -n | tail
#
# OUTPUT:
# MEANI=1.5:E=0.0011:PREI=1.5:I=1 Y 0.9285681 U 0.8519953 V 0.8507861 All 0.9028422
# MEANI=1.5:E=0.0015:PREI=1.25:I=1 Y 0.9286878 U 0.8519974 V 0.8507859 All 0.9029224
# MEANI=1.5:E=0.001:PREI=1.5:I=1 Y 0.9288154 U 0.8519965 V 0.8507858 All 0.9030073
# MEANI=1.5:E=0.0009:PREI=1.5:I=1 Y 0.9288872 U 0.8519971 V 0.8507863 All 0.9030555
# MEANI=1.5:E=0.0014:PREI=1.25:I=1 Y 0.9290727 U 0.8519984 V 0.850786 All 0.9031791
# MEANI=1.5:E=0.0013:PREI=1.25:I=1 Y 0.9293994 U 0.8519985 V 0.850786 All 0.9033971
# MEANI=1.5:E=0.0009:PREI=1.25:I=1 Y 0.9294709 U 0.8519987 V 0.8507864 All 0.903445
# MEANI=1.5:E=0.0012:PREI=1.25:I=1 Y 0.9296498 U 0.8519976 V 0.8507861 All 0.903564
# MEANI=1.5:E=0.001:PREI=1.25:I=1 Y 0.929748 U 0.852 V 0.8507863 All 0.9036297
# MEANI=1.5:E=0.0011:PREI=1.25:I=1 Y 0.929784 U 0.8519984 V 0.850786 All 0.9036534
#

### Optimal guided filter for injection into NLM (chroma)
#
#fn="NLM:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:25:1.25:1e-6:10:GUIDED_MEANI=0.75,0.9375,1.5:GUIDED_I=1,2,3,4,6,8,10:GUIDED_PREI=1.0,1.125...1.5:RF='.._guided.glsl'.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
# OUTPUT:
# S=33.203125:GUIDED_MEANI=0.750000:GUIDED_I=1:GUIDED_PREI=1.000000:RF=../guided.glsl 0.92638724545
# S=31.250000:GUIDED_MEANI=0.750000:GUIDED_I=1:GUIDED_PREI=1.500000:RF=../guided.glsl 0.926396727
# S=31.250000:GUIDED_MEANI=0.750000:GUIDED_I=1:GUIDED_PREI=1.375000:RF=../guided.glsl 0.9263994
# S=31.901042:GUIDED_MEANI=0.750000:GUIDED_I=1:GUIDED_PREI=1.125000:RF=../guided.glsl 0.92640200909
# S=31.250000:GUIDED_MEANI=0.750000:GUIDED_I=1:GUIDED_PREI=1.250000:RF=../guided.glsl 0.92640402727
# S=25:GUIDED_MEANI=1.500000:GUIDED_I=1:GUIDED_PREI=1.500000:RF=../guided.glsl 0.9264217091
# S=27.994792:GUIDED_MEANI=1.500000:GUIDED_I=1:GUIDED_PREI=1.000000:RF=../guided.glsl 0.9264234364
# S=25:GUIDED_MEANI=1.500000:GUIDED_I=1:GUIDED_PREI=1.375000:RF=../guided.glsl 0.9264271455
# S=26.250000:GUIDED_MEANI=1.500000:GUIDED_I=1:GUIDED_PREI=1.125000:RF=../guided.glsl 0.92643555455
# S=25:GUIDED_MEANI=1.500000:GUIDED_I=1:GUIDED_PREI=1.250000:RF=../guided.glsl 0.92643651818
#

### Optimal NLM LGC (chroma, necessarily)
#
#fn="NLM:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:10:3:1e-6:10:RF='SHARE_LUMA':D1W=1:RI=3:RFI=2:WDT=0.0,0.25...1.5:SW=1.0,0.875,0.75:R=3,5,7.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=8.888889:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.750000:R=7 0.9465736909
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=1.000000:R=7 0.94704555455
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=1.000000:R=7 0.94706957273
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=1.000000:R=7 0.9471524091
# S=7.500000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.875000:R=7 0.947231364
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.875000:R=7 0.947245964
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.875000:R=7 0.94735124545
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.750000:R=7 0.9473976909
# S=7.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.750000:R=7 0.9474485909
# S=8.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.750000:R=7 0.9475138727
#
#bzcat "stats/$fn" | grep -F :R=5 | sort -k 2 -n | tail
#
# OUTPUT:
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=1.000000:R=5 0.93730393636
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=1.000000:R=5 0.93733117273
# S=13.333333:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.875000:R=5 0.93767555455
# S=15.000000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.875000:R=5 0.9376983
# S=12.222222:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.875000:R=5 0.93772519091
# S=12.777778:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.875000:R=5 0.9377606545
# S=12.500000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.500000:SW=0.750000:R=5 0.9380457273
# S=15.000000:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.750000:SW=0.750000:R=5 0.9380642727
# S=11.666667:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.250000:SW=0.750000:R=5 0.93810337273
# S=11.666667:RF=SHARE_LUMA:D1W=1:RI=3:RFI=2:WDT=0.000000:SW=0.750000:R=5 0.938148545
#

### Optimal guided filter for injection into NLM (chroma, anime)
### XXX not accurate, forgot RF, retest
#
### The I variable doesn't seem to matter as much
### MEANI < 1 doesn't seem to do well here
#
#fn="NLM:anime:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=S:20:1.25:1e-5:10:GUIDED_MEANI=0.5,0.75,1.5,2,2.5:GUIDED_PREI=1.0,1.125:GUIDED_I=1,2,3,4,6,8,10:EP=0.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1.125:GUIDED_I=4:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1.125:GUIDED_I=6:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1.125:GUIDED_I=8:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1:GUIDED_I=10:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1:GUIDED_I=1:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1:GUIDED_I=2:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1:GUIDED_I=3:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1:GUIDED_I=4:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1:GUIDED_I=6:EP=0 0.9360216
# S=22:GUIDED_MEANI=2:GUIDED_PREI=1:GUIDED_I=8:EP=0 0.9360216
#

### Optimal guided filter (chroma)
#
#fn="guided:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=MEANI:1.5:2:1e-5:10:PREI=1,1.125,1.5:I=1,2,3,4,6,8,10.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT: 
# MEANI=1.5:PREI=1.125:I=1 0.926061927
# MEANI=0.75:PREI=1.125:I=6 0.9263562818
# MEANI=0.75:PREI=1:I=6 0.926401109
# MEANI=1.5:PREI=1.5:I=1 0.930031873
# MEANI=0.75:PREI=1.5:I=4 0.9324472818
# MEANI=0.75:PREI=1.125:I=4 0.932685127
# MEANI=0.75:PREI=1:I=4 0.93270709
# MEANI=0.9375:PREI=1:I=2 0.9421686636
# MEANI=0.9375:PREI=1.125:I=2 0.942651127
# MEANI=0.9375:PREI=1.5:I=2 0.943026745
#

### Optimal guided filter (anime, chroma)
#
#fn="guided:anime:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=MEANI:1.5:2:3e-3:10:E=0.001,0.0025,0.005,0.0075,0.01:PREI=1,1.125:I=1,2,3,4,6,8,10.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# MEANI=0.75:E=0.01:PREI=1.125:I=2 0.954283159
# MEANI=0.75:E=0.01:PREI=1:I=2 0.954322068
# MEANI=0.75:E=0.0075:PREI=1.125:I=2 0.954745977
# MEANI=0.75:E=0.0075:PREI=1:I=2 0.9547795
# MEANI=0.75:E=0.005:PREI=1.125:I=2 0.95543764
# MEANI=0.75:E=0.005:PREI=1:I=2 0.9554467
# MEANI=1.5:E=0.001:PREI=1:I=2 0.955923773
# MEANI=1.5:E=0.001:PREI=1.125:I=2 0.95689466
# MEANI=1.5:E=0.0025:PREI=1:I=2 0.957237659
# MEANI=1.5:E=0.0025:PREI=1.125:I=2 0.957292341
#

### Optimal guided LGC (chroma, necessarily)
#
### Guided LGC seems to slightly benefit from high E
#
### Guided LGC doesn't perform as well as regular guided
#
#fn="guided:images:CHROMA:NOISE=10:10:1080x1080:yuv444p:CAT=1:MAX=:10:1.25:1e-6:10:E=0.001,0.01,0.1...1000.0:MEANI=1.75,2.0...5.0:I='SHARE_LUMA'.stats.bz2"
#bzcat "stats/$fn" | sort -k 2 -n | tail
#
# OUTPUT:
# E=1.000000:MEANI=2.500000:I=SHARE_LUMA 0.92123644545
# E=10.000000:MEANI=2.500000:I=SHARE_LUMA 0.9212697273
# E=1000.000000:MEANI=2.500000:I=SHARE_LUMA 0.92127237273
# E=100.000000:MEANI=2.500000:I=SHARE_LUMA 0.92127273636
# E=0.010000:MEANI=2.000000:I=SHARE_LUMA 0.9307101636
# E=0.100000:MEANI=2.000000:I=SHARE_LUMA 0.9385577455
# E=1.000000:MEANI=2.000000:I=SHARE_LUMA 0.939119545
# E=10.000000:MEANI=2.000000:I=SHARE_LUMA 0.9391683273
# E=1000.000000:MEANI=2.000000:I=SHARE_LUMA 0.93917273
# E=100.000000:MEANI=2.000000:I=SHARE_LUMA 0.9391733182
#


