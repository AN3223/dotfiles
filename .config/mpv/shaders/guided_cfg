#!/usr/bin/awk -f

function hooks() {
	for (i in HOOKS)
		print("//!HOOK", HOOKS[i])
}

BEGIN {
	split(ENVIRON["GUIDED_OPTS"], opts, ":")
	split("LUMA,CHROMA,RGB", HOOKS, ",")

	for (i in opts) {
		split(opts[i], var_val, "=")
		if (var_val[1] == "HOOKS")
			split(var_val[2], HOOKS, ",")
		else if (var_val[1] == "I" && var_val[2] !~ /^[0-9][.]?[0-9]*$/)
			I = var_val[2]
	}

	if (I ~ /^SHARE_/)
		I_TEX = substr(I, length("SHARE_")+1)
}

/^\/\/desc:/ && ENVIRON["GUIDED_DESC"] { print($1, ENVIRON["GUIDED_DESC"]); next; }

/^#define/ {
	for (i in opts) {
		split(opts[i], var_val, "=")
		if ($2 == var_val[1]) {
			printf("#define %s %s\n", var_val[1], var_val[2])
			next
		}
	}
}

{
	if ($1 == "//!HOOK" && !skipping_prei) {
		if (!hook_mark) {
			hook_mark = 1
			hooks()
		}
		next
	} else {
		hook_mark = 0
	}
}

/^\/\/!DESC/ {
	stage = substr($4, 2, length($4)-2) # contents DESC's parenthesis

	if (I && stage == "PREI")
		skipping_prei = 1
	else if (skipping_prei)
		skipping_prei = 0
}

/^\/\/!BIND/ && stage == "I" && I_TEX {
	print($1, I_TEX)
	next
}

/PREI/ && stage == "I" && I_TEX { gsub("PREI", I_TEX) }

/^\/\/!(WIDTH|HEIGHT)/ {
	if (stage == "I" && I_TEX) {
		print($1, I_TEX "." tolower(substr($1, 4, 1)))
		next
	} else if (stage == "I" && I_TEX) {
		print($0)
		next
	} else {
		for (i in opts) {
			split(opts[i], var_val, "=")
			if (stage == var_val[1]) {
				print($1, $2, var_val[2], $4)
				next
			}
		}
	}
}

skipping_prei { next }
{	print($0) }

