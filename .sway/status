#!/bin/sh

cpu_pcnt=$(mpstat 3 1 --dec=1 | awk '$12 != "" {print 100 - $12}' | tail -n1)

# May require modification on other PCs
cpu_temp=$(acpi -t | awk '{print $4}')

net=$(ping -c1 -w1 1.1.1.1 > /dev/null && printf Connected || printf Disconnected)

ram=$(free | awk '$1 == "Mem:" {printf "%2.1f", 100 / ($2 / $3)}')

# audio_info is parsed weirdly b/c amixer's output is not easily parse-able, since
# the number of fields may vary, and even the number of [bracketed] fields may vary.
# TODO: Simplify this (amixer may not be the tool for the job?).
audio_info=$(amixer get Master | tail -n1 | tr ' ' '\n' | awk '/\[.+\]/ {print $1}')
audio_on=$(printf %s "$audio_info" | tail -n1)
audio_level=$(printf %s "$audio_info" | head -n1)

if [ "$audio_on" = '[on]' ]; then
	audio="$audio_level"
else
	audio="[muted]"
fi

filter_battery_info() {
	sed 's/, )/)/' |  # Remove comma when fully charged
	sed 's/ 00:/ /'   # Remove redundant part of timestamp
}

battery=$(acpi -b | awk '{printf "%d%% (%s %s)", $4, $3, $5}' | filter_battery_info)

date=$(date +'%a, %b %-d %-I:%M %p')

sep='  |  ' # Seperator

printf '%s\n' "BATTERY: ${battery} ${sep} NET: ${net} ${sep} AUDIO: ${audio} ${sep} CPU: ${cpu_pcnt}% ${cpu_temp}Â°C ${sep} RAM: ${ram}% ${sep} ${date}"
